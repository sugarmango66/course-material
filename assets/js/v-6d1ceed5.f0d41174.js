"use strict";(self.webpackChunkcourse_material=self.webpackChunkcourse_material||[]).push([[4837],{3595:(e,t,r)=>{r.r(t),r.d(t,{default:()=>o});var a=r(6252);const n=(0,a._)("h1",{id:"handling-concurrent-http-requests",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#handling-concurrent-http-requests","aria-hidden":"true"},"#"),(0,a.Uk)(" Handling Concurrent HTTP Requests")],-1),l=(0,a._)("p",null,"So, our web application receives 1000 requests/second. How does it handle that as efficient as possible? Turns out there are some different ways to handle it, and Node.js started to use a new approach that turned out to be more scalable than the traditional approaches used. At least to some extent, but let's take a closer look at it!",-1),d=(0,a._)("iframe",{width:"560",height:"314",src:"https://www.youtube.com/embed/mZxtkMhL5VA",frameborder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""},null,-1),i=(0,a.uE)('<h2 id="lecture-material" tabindex="-1"><a class="header-anchor" href="#lecture-material" aria-hidden="true">#</a> Lecture material</h2><ul><li><a href="handling-concurrent-http-requests.pdf">handling-concurrent-http-requests.pdf</a></li><li><a href="handling-concurrent-http-requests.pptx">handling-concurrent-http-requests.pptx</a></li></ul><h2 id="recommended-reading" tabindex="-1"><a class="header-anchor" href="#recommended-reading" aria-hidden="true">#</a> Recommended reading</h2>',3),c={href:"https://www.journaldev.com/7462/node-js-architecture-single-threaded-event-loop",target:"_blank",rel:"noopener noreferrer"},s=(0,a.Uk)("Node JS Architecture â€“ Single Threaded Event Loop"),u={},o=(0,r(3744).Z)(u,[["render",function(e,t){const r=(0,a.up)("OutboundLink");return(0,a.wg)(),(0,a.iD)(a.HY,null,[n,l,d,i,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a._)("a",c,[s,(0,a.Wm)(r)])])])],64)}]])},3744:(e,t)=>{t.Z=(e,t)=>{const r=e.__vccOpts||e;for(const[e,a]of t)r[e]=a;return r}},4362:(e,t,r)=>{r.r(t),r.d(t,{data:()=>a});const a={key:"v-6d1ceed5",path:"/lectures/handling-concurrent-http-requests/",title:"Handling Concurrent HTTP Requests",lang:"en-US",frontmatter:{sidebar:"auto",navbarTitle:"Handling Concurrent HTTP Requests"},excerpt:"",headers:[{level:2,title:"Lecture material",slug:"lecture-material",children:[]},{level:2,title:"Recommended reading",slug:"recommended-reading",children:[]}],filePathRelative:"lectures/handling-concurrent-http-requests/README.md",git:{updatedTime:1642356151e3}}}}]);
//# sourceMappingURL=v-6d1ceed5.f0d41174.js.map