"use strict";(self.webpackChunkcourse_material=self.webpackChunkcourse_material||[]).push([[3897],{87:(n,a,s)=>{s.r(a),s.d(a,{default:()=>b});var e=s(6252);const t=(0,e._)("h1",{id:"handlebars",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#handlebars","aria-hidden":"true"},"#"),(0,e.Uk)(" Handlebars")],-1),p=(0,e._)("p",null,"A templating language used to generate HTML code.",-1),l=(0,e._)("iframe",{width:"560",height:"314",src:"https://www.youtube.com/embed/04cXGOZxhAI",frameborder:"0",allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""},null,-1),c=(0,e.uE)('<div class="custom-container tip"><p class="custom-container-title">Extra info</p><p>One thing I forgot in the lecture was that when you use the <code>#each</code> helper, the context is changed to the value you are iterating over. You can use <code>../</code> in the beginning to reference the parent context. Example:</p><p>Context:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>\n    isLoggedIn<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    humans<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token punctuation">{</span>id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&quot;Alice&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span>id<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> name<span class="token operator">:</span> <span class="token string">&quot;Bob&quot;</span><span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>Template:</p><div class="language-handlebars ext-handlebars line-numbers-mode"><pre class="language-handlebars"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>\n    <span class="token handlebars language-handlebars"><span class="token delimiter punctuation">{{</span><span class="token block keyword">#each</span> <span class="token variable">humans</span><span class="token delimiter punctuation">}}</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>\n            <span class="token handlebars language-handlebars"><span class="token delimiter punctuation">{{</span><span class="token variable">name</span><span class="token delimiter punctuation">}}</span></span>\n            <span class="token handlebars language-handlebars"><span class="token delimiter punctuation">{{</span><span class="token block keyword">#if</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">/</span><span class="token variable">isLoggedIn</span><span class="token delimiter punctuation">}}</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/humans/<span class="token handlebars language-handlebars"><span class="token delimiter punctuation">{{</span><span class="token variable">id</span><span class="token delimiter punctuation">}}</span></span>/edit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Edit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n            <span class="token handlebars language-handlebars"><span class="token delimiter punctuation">{{</span><span class="token block keyword">/if</span><span class="token delimiter punctuation">}}</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n    <span class="token handlebars language-handlebars"><span class="token delimiter punctuation">{{</span><span class="token block keyword">/each</span><span class="token delimiter punctuation">}}</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>Generated HTML code:</p><div class="language-handlebars ext-handlebars line-numbers-mode"><pre class="language-handlebars"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>\n        Alice\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/humans/1/edit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Edit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>\n        Bob\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/humans/2/edit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Edit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></div><div class="custom-container tip"><p class="custom-container-title">Extra info</p><p>One thing I forgot in the lecture was that when you use the <code>#each</code> helper to iterate over primitive values (strings, numbers, booleans, etc.), you can use <code>this</code> to reference the value you are iterating over.</p><p>Context:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>\n    names<span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token string">&quot;Alice&quot;</span><span class="token punctuation">,</span>\n        <span class="token string">&quot;Bob&quot;</span>\n    <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>Template:</p><div class="language-handlebars ext-handlebars line-numbers-mode"><pre class="language-handlebars"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>\n    <span class="token handlebars language-handlebars"><span class="token delimiter punctuation">{{</span><span class="token block keyword">#each</span> <span class="token variable">names</span><span class="token delimiter punctuation">}}</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span><span class="token handlebars language-handlebars"><span class="token delimiter punctuation">{{</span><span class="token variable">this</span><span class="token delimiter punctuation">}}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n    <span class="token handlebars language-handlebars"><span class="token delimiter punctuation">{{</span><span class="token block keyword">/each</span><span class="token delimiter punctuation">}}</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Generated HTML code:</p><div class="language-handlebars ext-handlebars line-numbers-mode"><pre class="language-handlebars"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>Alice<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>Bob<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></div><h2 id="lecture-material" tabindex="-1"><a class="header-anchor" href="#lecture-material" aria-hidden="true">#</a> Lecture material</h2><ul><li><a href="handlebars.pdf">handlebars.pdf</a></li><li><a href="handlebars.pptx">handlebars.pptx</a></li></ul><h2 id="recommended-reading" tabindex="-1"><a class="header-anchor" href="#recommended-reading" aria-hidden="true">#</a> Recommended reading</h2>',5),o={href:"https://handlebarsjs.com/guide/",target:"_blank",rel:"noopener noreferrer"},u=(0,e.Uk)("Handlebars' Language Guide"),i={href:"http://tryhandlebarsjs.com/",target:"_blank",rel:"noopener noreferrer"},r=(0,e.Uk)("tryhandlebarsjs.com"),k=(0,e._)("ul",null,[(0,e._)("li",null,"Use it for practice and to see a lot of examples.")],-1),d={},b=(0,s(3744).Z)(d,[["render",function(n,a){const s=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[t,p,l,c,(0,e._)("ul",null,[(0,e._)("li",null,[(0,e._)("a",o,[u,(0,e.Wm)(s)])]),(0,e._)("li",null,[(0,e._)("a",i,[r,(0,e.Wm)(s)]),k])])],64)}]])},3744:(n,a)=>{a.Z=(n,a)=>{const s=n.__vccOpts||n;for(const[n,e]of a)s[n]=e;return s}},3791:(n,a,s)=>{s.r(a),s.d(a,{data:()=>e});const e={key:"v-33315f34",path:"/lectures/handlebars/",title:"Handlebars",lang:"en-US",frontmatter:{sidebar:"auto",navbarTitle:"Handlebars"},excerpt:"",headers:[{level:2,title:"Lecture material",slug:"lecture-material",children:[]},{level:2,title:"Recommended reading",slug:"recommended-reading",children:[]}],filePathRelative:"lectures/handlebars/README.md",git:{updatedTime:1631114563e3}}}}]);
//# sourceMappingURL=v-33315f34.4b7c99eb.js.map