{"version":3,"file":"assets/js/v-448d32ad.60a98a16.js","mappings":"yJAAA,E,QAAA,yoxCCCMA,EAAS,GAKf,GAFiC,E,QAAA,GAAgBA,EAAQ,CAAC,CAAC,S,qBDJ3D,O,aEIAC,EAAQ,EAAU,CAACC,EAAKC,KACpB,MAAMC,EAASF,EAAIG,WAAaH,EAChC,IAAK,MAAOI,EAAKC,KAAQJ,EACrBC,EAAOE,GAAOC,EAElB,OAAOH,I,0CCTJ,MAAMI,EAAO,CAClB,IAAO,aACP,KAAQ,yEACR,MAAS,kBACT,KAAQ,QACR,YAAe,CACb,QAAW,QAEb,QAAW,GACX,QAAW,CACT,CACE,MAAS,EACT,MAAS,cACT,KAAQ,cACR,SAAY,IAEd,CACE,MAAS,EACT,MAAS,aACT,KAAQ,aACR,SAAY,IAEd,CACE,MAAS,EACT,MAAS,aACT,KAAQ,aACR,SAAY,IAEd,CACE,MAAS,EACT,MAAS,aACT,KAAQ,aACR,SAAY,IAEd,CACE,MAAS,EACT,MAAS,aACT,KAAQ,aACR,SAAY,IAEd,CACE,MAAS,EACT,MAAS,aACT,KAAQ,aACR,SAAY,IAEd,CACE,MAAS,EACT,MAAS,aACT,KAAQ,aACR,SAAY,IAEd,CACE,MAAS,EACT,MAAS,aACT,KAAQ,aACR,SAAY,IAEd,CACE,MAAS,EACT,MAAS,aACT,KAAQ,aACR,SAAY,IAEd,CACE,MAAS,EACT,MAAS,aACT,KAAQ,aACR,SAAY,IAEd,CACE,MAAS,EACT,MAAS,cACT,KAAQ,cACR,SAAY,IAEd,CACE,MAAS,EACT,MAAS,cACT,KAAQ,cACR,SAAY,IAEd,CACE,MAAS,EACT,MAAS,cACT,KAAQ,cACR,SAAY,IAEd,CACE,MAAS,EACT,MAAS,cACT,KAAQ,cACR,SAAY,IAEd,CACE,MAAS,EACT,MAAS,cACT,KAAQ,cACR,SAAY,IAEd,CACE,MAAS,EACT,MAAS,cACT,KAAQ,cACR,SAAY,IAEd,CACE,MAAS,EACT,MAAS,cACT,KAAQ,cACR,SAAY,IAEd,CACE,MAAS,EACT,MAAS,cACT,KAAQ,cACR,SAAY,IAEd,CACE,MAAS,EACT,MAAS,cACT,KAAQ,cACR,SAAY,IAEd,CACE,MAAS,EACT,MAAS,cACT,KAAQ,cACR,SAAY,IAEd,CACE,MAAS,EACT,MAAS,cACT,KAAQ,cACR,SAAY,IAEd,CACE,MAAS,EACT,MAAS,cACT,KAAQ,cACR,SAAY,IAEd,CACE,MAAS,EACT,MAAS,cACT,KAAQ,cACR,SAAY,IAEd,CACE,MAAS,EACT,MAAS,cACT,KAAQ,cACR,SAAY,KAGhB,iBAAoB,sEACpB,IAAO,CACL,YAAe","sources":["webpack://course-material/./src/.vuepress/.temp/pages/courses/introduction-to-script-programming/exams/exam-2021-02-18.html.vue","webpack://course-material/./src/.vuepress/.temp/pages/courses/introduction-to-script-programming/exams/exam-2021-02-18.html.vue?58b7","webpack://course-material/./node_modules/vue-loader/dist/exportHelper.js","webpack://course-material/./src/.vuepress/.temp/pages/courses/introduction-to-script-programming/exams/exam-2021-02-18.html.js"],"sourcesContent":["<h1 id=\"exam-2021-02-18\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#exam-2021-02-18\" aria-hidden=\"true\">#</a> Exam 2021-02-18</h1>\n<p>Here you find the questions on the exam 2021-02-18.</p>\n<h2 id=\"information\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#information\" aria-hidden=\"true\">#</a> Information</h2>\n<p>Start by reading through all questions. Max score is 30 points.</p>\n<ul>\n<li>For grade 3, 40% of max score (12 points) is required.</li>\n<li>For grade 4, 60% of max score (18 points) is required.</li>\n<li>For grade 5, 80% of max score (24 points) is required.</li>\n</ul>\n<p>During the test, you are only allowed to use:</p>\n<ul>\n<li>The computer you sit at to only answer the questions on this exam (you may not run any other program).</li>\n<li>A dictionary to translate to/from English from/to your native language.</li>\n</ul>\n<p>Write your answers in either English or Swedish. If you write your answers in Swedish, make sure to not introduce any translation confusement. <strong>Write proper sentences (spelling, upper/lower case characters, punctuation, etc.).</strong> Answers that do not do this good enough/are vague/are ununderstandable cannot receive full score on the questions.</p>\n<p>Good luck!</p>\n<h2 id=\"question-1\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#question-1\" aria-hidden=\"true\">#</a> Question 1</h2>\n<div class=\"custom-container warning\"><p class=\"custom-container-title\">Question</p>\n<p>Place the following lines of code in such order they can be executed (read underscores as white-spaces/indentation (Inspera doesn't allow the text to begin with white-spaces)).</p>\n<ul>\n<li><code>___return entered_number + number</code></li>\n<li><code>def add_number(number):</code></li>\n<li><code>sum = add_number(5)</code></li>\n<li><code>___entered_number = int(entered_text)</code></li>\n<li><code>print(&quot;The sum is &quot;+str(sum)+&quot;.&quot;)</code></li>\n<li><code>___entered_text = input(&quot;Enter number to add: &quot;)</code></li>\n</ul>\n</div>\n<h2 id=\"question-2\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#question-2\" aria-hidden=\"true\">#</a> Question 2</h2>\n<div class=\"custom-container warning\"><p class=\"custom-container-title\">Question</p>\n<p>How many statements and expressions does the following code contain?</p>\n<div class=\"language-python ext-py line-numbers-mode\"><pre v-pre class=\"language-python\"><code>times_to_add_three <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\nthe_sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">while</span> <span class=\"token number\">0</span> <span class=\"token operator\">&lt;</span> times_to_add_three<span class=\"token punctuation\">:</span>\n   the_sum <span class=\"token operator\">=</span> the_sum <span class=\"token operator\">+</span> <span class=\"token number\">3</span>\n   times_to_add_three <span class=\"token operator\">=</span> times_to_add_three <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br></div></div></div>\n<h2 id=\"question-3\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#question-3\" aria-hidden=\"true\">#</a> Question 3</h2>\n<div class=\"custom-container warning\"><p class=\"custom-container-title\">Question</p>\n<p>What type of error does the code below contain? Syntax error, Logical error, Runtime error or no error at all? The purpose of the function is to compute the average value of the two numbers it receives (e.g. <code>average(4, 6)</code> â†’ <code>5</code>).</p>\n<div class=\"language-python ext-py line-numbers-mode\"><pre v-pre class=\"language-python\"><code><span class=\"token keyword\">def</span> <span class=\"token function\">average</span><span class=\"token punctuation\">(</span>number1<span class=\"token punctuation\">,</span> number2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>number1 <span class=\"token operator\">+</span> number <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br></div></div></div>\n<h2 id=\"question-4\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#question-4\" aria-hidden=\"true\">#</a> Question 4</h2>\n<div class=\"custom-container warning\"><p class=\"custom-container-title\">Question</p>\n<p>What values will be stored in the variables <code>i</code> and <code>x</code> after the following code has been executed?</p>\n<div class=\"language-python ext-py line-numbers-mode\"><pre v-pre class=\"language-python\"><code>students <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Alice\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Bob\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Claire\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"David\"</span><span class=\"token punctuation\">]</span>\ni <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nx <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">while</span> i <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>students<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    x <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>students<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    i <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br></div></div></div>\n<h2 id=\"question-5\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#question-5\" aria-hidden=\"true\">#</a> Question 5</h2>\n<div class=\"custom-container warning\"><p class=\"custom-container-title\">Question</p>\n<p>What is what in the code below?</p>\n<div class=\"language-python ext-py line-numbers-mode\"><pre v-pre class=\"language-python\"><code><span class=\"token keyword\">def</span> <span class=\"token function\">multiply</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> numbers<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> numbers<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\nproduct <span class=\"token operator\">=</span> multiply<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div></div><p>Pair each code piece with its corresponding name.</p>\n<p>Code pieces:</p>\n<ul>\n<li><code>numbers[1]</code></li>\n<li><code>numbers</code></li>\n<li><code>[2, 6]</code></li>\n<li><code>product</code></li>\n</ul>\n<p>Names:</p>\n<ul>\n<li>Argument</li>\n<li>Expression</li>\n<li>Variable</li>\n<li>Parameter</li>\n</ul>\n<p><strong>Note:</strong> Some code pieces may match multiple names, but there is only one way to get all 4 pairs right.</p>\n</div>\n<h2 id=\"question-6\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#question-6\" aria-hidden=\"true\">#</a> Question 6</h2>\n<div class=\"custom-container warning\"><p class=\"custom-container-title\">Question</p>\n<p>Which one of the following statements is a bad suggestion on how to represent data?</p>\n<ul>\n<li>To represent a room with a width and a height, one can use a list containing two numbers, e.g. <code>room = [10, 15]</code>.</li>\n<li>To represent a book with a title, one can use a dictionary with a string, e.g. <code>book = {&quot;title&quot;: &quot;There and back again&quot;}</code>.</li>\n<li>To represent a planet with a name, one can use a string, e.g. <code>planet_name = &quot;Tellus&quot;</code>.</li>\n<li>To represent the number of books in a library, one can use an integer, e.g. <code>number_of_books = 120000</code>.</li>\n<li>To represent the books in a library, one can use a list containing dictionaries, e.g:<div class=\"language-python ext-py line-numbers-mode\"><pre v-pre class=\"language-python\"><code>books <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span><span class=\"token string\">\"title\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"The Killer\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"number_of_pages\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">123</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span><span class=\"token string\">\"title\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Not Again\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"number_of_pages\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">253</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br></div></div></li>\n</ul>\n</div>\n<h2 id=\"question-7\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#question-7\" aria-hidden=\"true\">#</a> Question 7</h2>\n<div class=\"custom-container warning\"><p class=\"custom-container-title\">Question</p>\n<p>The following expression:</p>\n<div class=\"language-python ext-py line-numbers-mode\"><pre v-pre class=\"language-python\"><code><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div><p>Creates a range containing some integers. What is the sum of the integers in that range?</p>\n</div>\n<h2 id=\"question-8\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#question-8\" aria-hidden=\"true\">#</a> Question 8</h2>\n<div class=\"custom-container warning\"><p class=\"custom-container-title\">Question</p>\n<p>Below is a program that should:</p>\n<ol>\n<li>Ask the user to enter her name.</li>\n<li>Ask the user to enter a positive integer.</li>\n<li>Print the user's name as many times as the number she entered.</li>\n</ol>\n<div class=\"language-python ext-py line-numbers-mode\"><pre v-pre class=\"language-python\"><code>name <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter your name: \"</span><span class=\"token punctuation\">)</span>\ntimes_to_print <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter a positive integer: \"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>times_to_print<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br></div></div><p>When Claire runs the program, it does not work as intended. Explain why the program doesn't work they way it should, and suggest a solution to make it work (no need to write any Python code, describing the changes using words is enough, but be detailed).</p>\n</div>\n<h2 id=\"question-9\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#question-9\" aria-hidden=\"true\">#</a> Question 9</h2>\n<div class=\"custom-container warning\"><p class=\"custom-container-title\">Question</p>\n<p>What integers should be assigned to the variables <code>a</code> and <code>b</code> to slice out the values <code>&quot;r&quot;</code>, <code>&quot;s&quot;</code> and <code>&quot;t&quot;</code> in the code below?</p>\n<div class=\"language-python ext-py line-numbers-mode\"><pre v-pre class=\"language-python\"><code>my_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"s\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"t\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"u\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"v\"</span><span class=\"token punctuation\">]</span>\na <span class=\"token operator\">=</span> ?\nb <span class=\"token operator\">=</span> ?\nmy_new_list <span class=\"token operator\">=</span> my_list<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">:</span>b<span class=\"token punctuation\">]</span>\n<span class=\"token comment\"># my_new_list should now be [\"r\", \"s\", \"t\"]</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br></div></div></div>\n<h2 id=\"question-10\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#question-10\" aria-hidden=\"true\">#</a> Question 10</h2>\n<div class=\"custom-container warning\"><p class=\"custom-container-title\">Question</p>\n<p>Write the following code:</p>\n<div class=\"language-python ext-py line-numbers-mode\"><pre v-pre class=\"language-python\"><code>my_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>c<span class=\"token operator\">+</span>c <span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> <span class=\"token string\">\"abcdef\"</span><span class=\"token punctuation\">]</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div><p>Using a for loop (and the other things you need) instead of a list comprehension expression. Your own code should have the exact same meaning as the code above.</p>\n</div>\n<h2 id=\"question-11\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#question-11\" aria-hidden=\"true\">#</a> Question 11</h2>\n<div class=\"custom-container warning\"><p class=\"custom-container-title\">Question</p>\n<p>Write the following code:</p>\n<div class=\"language-python ext-py line-numbers-mode\"><pre v-pre class=\"language-python\"><code><span class=\"token builtin\">list</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>x <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> get_numbers<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> is_positive<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div><p>Using a for loop (and the other things you need) instead of a list comprehension expression. Your own code should have the exact same meaning as the code above.</p>\n</div>\n<h2 id=\"question-12\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#question-12\" aria-hidden=\"true\">#</a> Question 12</h2>\n<div class=\"custom-container warning\"><p class=\"custom-container-title\">Question</p>\n<p>Here is a quite complex structure with information about the population in different areas:</p>\n<div class=\"language-python ext-py line-numbers-mode\"><pre v-pre class=\"language-python\"><code>populations <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"countries\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Sweden\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"population\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">9903000</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Finland\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"population\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5495000</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Norway\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"population\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5233000</span><span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"cities\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Stockholm\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"population\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">789024</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"JÃ¶nkÃ¶ping\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"population\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">122952</span><span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br></div></div><p>Given this structure, write <strong>an expression</strong> that evaluates to the population of the country with the name <code>Stockholm</code>, i.e. <code>789024</code>.</p>\n<p><strong>Note</strong>: Do not write a statement, and simply writing <code>789024</code> is of course not OK; the value needs to be retrieved from the structure.</p>\n</div>\n<h2 id=\"question-13\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#question-13\" aria-hidden=\"true\">#</a> Question 13</h2>\n<div class=\"custom-container warning\"><p class=\"custom-container-title\">Question</p>\n<p>Suggest how the following data in Python:</p>\n<div class=\"language-python ext-py line-numbers-mode\"><pre v-pre class=\"language-python\"><code>team <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Arsenal\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"city\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"London\"</span><span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div><p>Can be written in XML code instead.</p>\n</div>\n<h2 id=\"question-14\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#question-14\" aria-hidden=\"true\">#</a> Question 14</h2>\n<div class=\"custom-container warning\"><p class=\"custom-container-title\">Question</p>\n<p>Suggest how the following data in Python:</p>\n<div class=\"language-python ext-py line-numbers-mode\"><pre v-pre class=\"language-python\"><code>countries <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n   <span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Arsenal\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"city\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"London\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n   <span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Tottenham\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"city\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"London\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n   <span class=\"token punctuation\">{</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Elfsborg\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"city\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"BorÃ¥s\"</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br></div></div><p>Can be written in CSV format. Do not write any extra characters not needed, but use as few characters as possible.</p>\n</div>\n<h2 id=\"question-15\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#question-15\" aria-hidden=\"true\">#</a> Question 15</h2>\n<div class=\"custom-container warning\"><p class=\"custom-container-title\">Question</p>\n<p>The following code crashes when it's executed.</p>\n<div class=\"language-python ext-py line-numbers-mode\"><pre v-pre class=\"language-python\"><code><span class=\"token keyword\">def</span> <span class=\"token function\">read_name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n   name <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter name: \"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">print_name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n   <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Your name is \"</span><span class=\"token operator\">+</span>name<span class=\"token punctuation\">)</span>\nread_name<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nprint_name<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br></div></div><p>Explain why it crashes, and suggest what changes that needs to be made to make it work. Your solution should contain one function for reading the name from the user and one to print the name the user entered.</p>\n</div>\n<h2 id=\"question-16\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#question-16\" aria-hidden=\"true\">#</a> Question 16</h2>\n<div class=\"custom-container warning\"><p class=\"custom-container-title\">Question</p>\n<p>What will be stored in the variable <code>sum</code> after the following code has been executed?</p>\n<div class=\"language-python ext-py line-numbers-mode\"><pre v-pre class=\"language-python\"><code><span class=\"token keyword\">def</span> <span class=\"token function\">a</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    number <span class=\"token operator\">=</span> number <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">b</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> number <span class=\"token keyword\">in</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">:</span>\n        number <span class=\"token operator\">=</span> number <span class=\"token operator\">+</span> <span class=\"token number\">3</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">c</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">5</span>\nmy_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\nc<span class=\"token punctuation\">(</span>my_list<span class=\"token punctuation\">)</span>\nb<span class=\"token punctuation\">(</span>my_list<span class=\"token punctuation\">)</span>\nb<span class=\"token punctuation\">(</span>my_list<span class=\"token punctuation\">)</span>\nc<span class=\"token punctuation\">(</span>my_list<span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">sum</span> <span class=\"token operator\">=</span> my_list<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> my_list<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br></div></div></div>\n<h2 id=\"question-17\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#question-17\" aria-hidden=\"true\">#</a> Question 17</h2>\n<div class=\"custom-container warning\"><p class=\"custom-container-title\">Question</p>\n<p>Implement the function <code>get_abbreviation</code>, which receives a string and should return the abbreviation of that string. Your function should support the following abbreviations:</p>\n<table>\n<thead>\n<tr>\n<th>String</th>\n<th>Abbreviation</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>et cetera</td>\n<td>etc.</td>\n</tr>\n<tr>\n<td>with</td>\n<td>w/</td>\n</tr>\n<tr>\n<td>you</td>\n<td>u</td>\n</tr>\n</tbody>\n</table>\n<p>If the string is none of the strings found in the table above, return the string itself.</p>\n<p>Sample usage:</p>\n<div class=\"language-text ext-text line-numbers-mode\"><pre v-pre class=\"language-text\"><code>get_abbreviation(\"with\")   â†’   \"w/\"\nget_abbreviation(\"as soon as possible\")   â†’   \"as soon as possible\"\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br></div></div></div>\n<h2 id=\"question-18\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#question-18\" aria-hidden=\"true\">#</a> Question 18</h2>\n<div class=\"custom-container warning\"><p class=\"custom-container-title\">Question</p>\n<p>Write a program that keeps asking the user to enter an integer until the user enters <code>stop</code>. The program should then print the sum of the lowest and highest integer the user entered. When running the program, it can look like this (bold text represents text entered by the user).</p>\n<p>Enter an integer or stop: <strong>2</strong><br>\nEnter an integer or stop: <strong>6</strong><br>\nEnter an integer or stop: <strong>4</strong><br>\nEnter an integer or stop: <strong>stop</strong><br>\nThe sum of the lowest and highest integer is 8.</p>\n<p><strong>Note</strong>: The output should look precisely as in the example above (including white-spaces, but with the exception of the boldness from the input, of course).</p>\n<p><strong>Note</strong>: You can expect the user to actually enter a number or stop (no error handling needed).</p>\n<p><strong>Note</strong>: You can expect the user to enter at least two numbers.</p>\n</div>\n<h2 id=\"question-19\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#question-19\" aria-hidden=\"true\">#</a> Question 19</h2>\n<div class=\"custom-container warning\"><p class=\"custom-container-title\">Question</p>\n<p>Implement the function <code>is_sum_at_least_100</code>, which receives a list of numbers, and returns:</p>\n<ul>\n<li><code>true</code> if the sum of the numbers is equal to or greater than 100.</li>\n<li><code>false</code> otherwise.</li>\n</ul>\n<p>Write two different implementations of the function: one using (at least) one while loop, and another one using (at least) one for loop.</p>\n<p>Sample usage:</p>\n<div class=\"language-text ext-text line-numbers-mode\"><pre v-pre class=\"language-text\"><code>is_sum_at_least_100([50, 50, 20])   â†’  true\nis_sum_at_least_100([50, 50, -20])  â†’  false\nis_sum_at_least_100([])             â†’  false\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div></div></div>\n<h2 id=\"question-20\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#question-20\" aria-hidden=\"true\">#</a> Question 20</h2>\n<div class=\"custom-container warning\"><p class=\"custom-container-title\">Question</p>\n<p>Implement the function <code>int_to_digits</code>, which receives a positive integer, and should return a list containing the digits in that integer.</p>\n<p>Sample usage:</p>\n<div class=\"language-text ext-text line-numbers-mode\"><pre v-pre class=\"language-text\"><code>int_to_digits(123)   â†’  [1, 2, 3]\nint_to_digits(5398)  â†’  [5, 3, 9, 8]\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br></div></div></div>\n<h2 id=\"question-21\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#question-21\" aria-hidden=\"true\">#</a> Question 21</h2>\n<div class=\"custom-container warning\"><p class=\"custom-container-title\">Question</p>\n<p>Given the following data about some <del>movies</del> <ins>houses</ins>:</p>\n<div class=\"language-python ext-py line-numbers-mode\"><pre v-pre class=\"language-python\"><code>houses <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n   <span class=\"token punctuation\">{</span><span class=\"token string\">\"owner\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Alice\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Alice's Palace\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"size\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">320</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"number_of_rooms\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">9</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n   <span class=\"token punctuation\">{</span><span class=\"token string\">\"owner\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Alice\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Alice's Home\"</span><span class=\"token punctuation\">,</span>   <span class=\"token string\">\"size\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">84</span><span class=\"token punctuation\">,</span>  <span class=\"token string\">\"number_of_rooms\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n   <span class=\"token punctuation\">{</span><span class=\"token string\">\"owner\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Alice\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Alice's Cabin\"</span><span class=\"token punctuation\">,</span>  <span class=\"token string\">\"size\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>  <span class=\"token string\">\"number_of_rooms\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n   <span class=\"token punctuation\">{</span><span class=\"token string\">\"owner\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Bob\"</span><span class=\"token punctuation\">,</span>   <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Bob's Home\"</span><span class=\"token punctuation\">,</span>     <span class=\"token string\">\"size\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">94</span><span class=\"token punctuation\">,</span>  <span class=\"token string\">\"number_of_rooms\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n   <span class=\"token punctuation\">{</span><span class=\"token string\">\"owner\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Bob\"</span><span class=\"token punctuation\">,</span>   <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Bob's Cabin\"</span><span class=\"token punctuation\">,</span>    <span class=\"token string\">\"size\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>  <span class=\"token string\">\"number_of_rooms\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br></div></div><p>Write code that computes and prints the name of the human that owns the most number of rooms in total.</p>\n<p><strong>Note</strong>: Your code should still work as expected if one adds/removes houses to/from the list. Alice and Bob are not the only ones who can own a house.</p>\n</div>\n<h2 id=\"question-22\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#question-22\" aria-hidden=\"true\">#</a> Question 22</h2>\n<div class=\"custom-container warning\"><p class=\"custom-container-title\">Question</p>\n<p>The class <code>MovieCollection</code> represents a collection of movies. It has the following constructor/methods:</p>\n<table>\n<thead>\n<tr>\n<th>Constructor/Method</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>MovieCollection()</code></td>\n<td>Creates a new empty <code>MovieCollection</code>.</td>\n</tr>\n<tr>\n<td><code>add_movie(name, runtime)</code></td>\n<td>Adds the movie with the given <code>name</code> and <code>runtime</code> (length in minutes) to the collection.</td>\n</tr>\n<tr>\n<td><code>get_number_of_movies()</code></td>\n<td>Returns the number of movies in the collection.</td>\n</tr>\n<tr>\n<td><code>get_total_runtime()</code></td>\n<td>Returns the sum of the runtime of all movies in the collection.</td>\n</tr>\n<tr>\n<td><code>get_average_runtime()</code></td>\n<td>Returns the average runtime of the movies in the collection.</td>\n</tr>\n</tbody>\n</table>\n<p>Write a program making use of the class. In the program, you should continue to ask the user to enter the name and runtime of a movie to be added to the <code>MovieCollection</code> until the user don't want to add any more. Then you should display the average runtime of the movies in the collection on the screen.</p>\n<p>Sample usage:</p>\n<div style=\"font-family: monospace; padding-left: 2em;\">\n<p>Enter one more movie? <strong>Yes</strong><br>\nEnter movie name: <strong>Catch me if you can</strong><br>\nEnter movie runtime: <strong>115</strong><br>\nEnter one more movie? <strong>Yes</strong><br>\nEnter movie name: <strong>See you later</strong><br>\nEnter movie runtime: <strong>75</strong><br>\nEnter one more movie? <strong>No</strong><br>\nAverage runtime is 95.</p>\n</div>\n</div>\n<h2 id=\"question-23\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#question-23\" aria-hidden=\"true\">#</a> Question 23</h2>\n<div class=\"custom-container warning\"><p class=\"custom-container-title\">Question</p>\n<p>The class <code>MovieCollection</code> represents a collection of movies. It has the following constructor/methods:</p>\n<table>\n<thead>\n<tr>\n<th>Constructor/Method</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>MovieCollection()</code></td>\n<td>Creates a new empty <code>MovieCollection</code>.</td>\n</tr>\n<tr>\n<td><code>add_movie(name, runtime)</code></td>\n<td>Adds the movie with the given <code>name</code> and <code>runtime</code> (length in minutes) to the collection.</td>\n</tr>\n<tr>\n<td><code>get_number_of_movies()</code></td>\n<td>Returns the number of movies in the collection.</td>\n</tr>\n<tr>\n<td><code>get_total_runtime()</code></td>\n<td>Returns the sum of the runtime of all movies in the collection.</td>\n</tr>\n<tr>\n<td><code>get_average_runtime()</code></td>\n<td>Returns the average runtime of the movies in the collection.</td>\n</tr>\n</tbody>\n</table>\n<p>Implement the <code>MovieCollection</code> class per the description above.</p>\n</div>\n","import { render } from \"./exam-2021-02-18.html.vue?vue&type=template&id=5596a0c4\"\nconst script = {}\n\nimport exportComponent from \"C:\\\\Users\\\\peter\\\\projects\\\\course-material\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","export const data = {\n  \"key\": \"v-448d32ad\",\n  \"path\": \"/courses/introduction-to-script-programming/exams/exam-2021-02-18.html\",\n  \"title\": \"Exam 2021-02-18\",\n  \"lang\": \"en-US\",\n  \"frontmatter\": {\n    \"sidebar\": \"auto\"\n  },\n  \"excerpt\": \"\",\n  \"headers\": [\n    {\n      \"level\": 2,\n      \"title\": \"Information\",\n      \"slug\": \"information\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"Question 1\",\n      \"slug\": \"question-1\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"Question 2\",\n      \"slug\": \"question-2\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"Question 3\",\n      \"slug\": \"question-3\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"Question 4\",\n      \"slug\": \"question-4\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"Question 5\",\n      \"slug\": \"question-5\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"Question 6\",\n      \"slug\": \"question-6\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"Question 7\",\n      \"slug\": \"question-7\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"Question 8\",\n      \"slug\": \"question-8\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"Question 9\",\n      \"slug\": \"question-9\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"Question 10\",\n      \"slug\": \"question-10\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"Question 11\",\n      \"slug\": \"question-11\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"Question 12\",\n      \"slug\": \"question-12\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"Question 13\",\n      \"slug\": \"question-13\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"Question 14\",\n      \"slug\": \"question-14\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"Question 15\",\n      \"slug\": \"question-15\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"Question 16\",\n      \"slug\": \"question-16\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"Question 17\",\n      \"slug\": \"question-17\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"Question 18\",\n      \"slug\": \"question-18\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"Question 19\",\n      \"slug\": \"question-19\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"Question 20\",\n      \"slug\": \"question-20\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"Question 21\",\n      \"slug\": \"question-21\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"Question 22\",\n      \"slug\": \"question-22\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"Question 23\",\n      \"slug\": \"question-23\",\n      \"children\": []\n    }\n  ],\n  \"filePathRelative\": \"courses/introduction-to-script-programming/exams/exam-2021-02-18.md\",\n  \"git\": {\n    \"updatedTime\": 1637833218000\n  }\n}\n"],"names":["script","exports","sfc","props","target","__vccOpts","key","val","data"],"sourceRoot":""}