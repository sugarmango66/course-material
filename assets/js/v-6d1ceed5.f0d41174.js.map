{"version":3,"file":"assets/js/v-6d1ceed5.f0d41174.js","mappings":"uKAAA,OAA2L,MAAvLA,GAAG,oCAAoCC,SAAS,M,EAAK,OAA2F,KAAxFC,MAAM,gBAAgBC,KAAK,qCAAqC,cAAY,QAAO,MAA/I,QAAoJ,wC,MACpJ,OAAsV,SAAnV,mVAA+U,G,GAClV,OAA0M,UAAlMC,MAAM,MAAMC,OAAO,MAAMC,IAAI,4CAA4CC,YAAY,IAAIC,MAAM,0EAA0EC,gBAAA,I,YAFjL,sf,GAUON,KAAK,kFAAkFO,OAAO,SAASC,IAAI,uB,GAVlH,QAUwI,qDCTlIC,EAAS,GAKf,GAFiC,E,QAAA,GAAgBA,EAAQ,CAAC,CAAC,S,iEDJ3D,qBACA,EACA,EACA,GAMA,OAEK,YADL,OAAiN,YAA7M,OAAwM,IAAxM,EAAwM,CAV5M,GAUyL,QAAe,U,sBENxMC,EAAQ,EAAU,CAACC,EAAKC,KACpB,MAAML,EAASI,EAAIE,WAAaF,EAChC,IAAK,MAAOG,EAAKC,KAAQH,EACrBL,EAAOO,GAAOC,EAElB,OAAOR,I,0CCTJ,MAAMS,EAAO,CAClB,IAAO,aACP,KAAQ,+CACR,MAAS,oCACT,KAAQ,QACR,YAAe,CACb,QAAW,OACX,YAAe,qCAEjB,QAAW,GACX,QAAW,CACT,CACE,MAAS,EACT,MAAS,mBACT,KAAQ,mBACR,SAAY,IAEd,CACE,MAAS,EACT,MAAS,sBACT,KAAQ,sBACR,SAAY,KAGhB,iBAAoB,uDACpB,IAAO,CACL,YAAe","sources":["webpack://course-material/./src/.vuepress/.temp/pages/lectures/handling-concurrent-http-requests/index.html.vue","webpack://course-material/./src/.vuepress/.temp/pages/lectures/handling-concurrent-http-requests/index.html.vue?1c68","webpack://course-material/./node_modules/vue-loader/dist/exportHelper.js","webpack://course-material/./src/.vuepress/.temp/pages/lectures/handling-concurrent-http-requests/index.html.js"],"sourcesContent":["<h1 id=\"handling-concurrent-http-requests\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#handling-concurrent-http-requests\" aria-hidden=\"true\">#</a> Handling Concurrent HTTP Requests</h1>\n<p>So, our web application receives 1000 requests/second. How does it handle that as efficient as possible? Turns out there are some different ways to handle it, and Node.js started to use a new approach that turned out to be more scalable than the traditional approaches used. At least to some extent, but let's take a closer look at it!</p>\n<iframe width=\"560\" height=\"314\" src=\"https://www.youtube.com/embed/mZxtkMhL5VA\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<h2 id=\"lecture-material\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#lecture-material\" aria-hidden=\"true\">#</a> Lecture material</h2>\n<ul>\n<li><a href=\"handling-concurrent-http-requests.pdf\">handling-concurrent-http-requests.pdf</a></li>\n<li><a href=\"handling-concurrent-http-requests.pptx\">handling-concurrent-http-requests.pptx</a></li>\n</ul>\n<h2 id=\"recommended-reading\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#recommended-reading\" aria-hidden=\"true\">#</a> Recommended reading</h2>\n<ul>\n<li><a href=\"https://www.journaldev.com/7462/node-js-architecture-single-threaded-event-loop\" target=\"_blank\" rel=\"noopener noreferrer\">Node JS Architecture â€“ Single Threaded Event Loop<OutboundLink/></a></li>\n</ul>\n","import { render } from \"./index.html.vue?vue&type=template&id=1565f71c\"\nconst script = {}\n\nimport exportComponent from \"C:\\\\Users\\\\peter\\\\projects\\\\course-material\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","export const data = {\n  \"key\": \"v-6d1ceed5\",\n  \"path\": \"/lectures/handling-concurrent-http-requests/\",\n  \"title\": \"Handling Concurrent HTTP Requests\",\n  \"lang\": \"en-US\",\n  \"frontmatter\": {\n    \"sidebar\": \"auto\",\n    \"navbarTitle\": \"Handling Concurrent HTTP Requests\"\n  },\n  \"excerpt\": \"\",\n  \"headers\": [\n    {\n      \"level\": 2,\n      \"title\": \"Lecture material\",\n      \"slug\": \"lecture-material\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"Recommended reading\",\n      \"slug\": \"recommended-reading\",\n      \"children\": []\n    }\n  ],\n  \"filePathRelative\": \"lectures/handling-concurrent-http-requests/README.md\",\n  \"git\": {\n    \"updatedTime\": 1642356151000\n  }\n}\n"],"names":["id","tabindex","class","href","width","height","src","frameborder","allow","allowfullscreen","target","rel","script","exports","sfc","props","__vccOpts","key","val","data"],"sourceRoot":""}