const jwtDecode=require("jwt-decode"),networkDelayInMs=10,rootPath="http://localhost:8000";let accessToken=null;async function sendRequest(t,e,a=null,s="application/json"){let r="";const n=new Headers;if(null!=accessToken&&n.append("Authorization","Bearer "+accessToken),null!=a)switch(n.append("Content-Type",s),s){case"application/json":r=JSON.stringify(a);break;case"application/x-www-form-urlencoded":const t=new URLSearchParams;for(const e of Object.keys(a))t.append(e,a[e]);r=t.toString();break;default:alert("ERROR, unknown Content-Type to send body with.")}try{const a={method:t,headers:n,credentials:"omit"};return""!=r&&(a.body=r),await sleep(10),await fetch(rootPath+e,a)}catch(t){throw["networkError"]}}function displayError(t){alert(`\n\t\tSDK has not been programmed to handle status code ${t.status}\n\t\tfor the last request sent.\n\t`)}async function sleep(t){return new Promise((e=>setTimeout(e,t)))}module.exports.getAllAccounts=async function(t){let e;try{e=await sendRequest("GET","/accounts")}catch(a){return void t(a)}let a=[],s=[];switch(e.status){case 200:s=await e.json();break;case 500:a=["backendError"];break;default:displayError(e)}t(a,s)},module.exports.getAccountById=async function(t,e){let a;try{a=await sendRequest("GET","/accounts/"+t)}catch(s){return void e(s)}let s=[],r=null;switch(a.status){case 200:r=await a.json();break;case 404:s=["notFound"];break;case 500:s=["backendError"];break;default:displayError(a)}e(s,r)},module.exports.createAccount=async function(t,e){let a;try{a=await sendRequest("POST","/accounts",t)}catch(s){return void e(s)}let s=[],r=-1;switch(a.status){case 201:const t=a.headers.get("Location");r=parseInt(t.substr("/accounts/".length));break;case 400:s=await a.json();break;case 422:s=["invalidAccount"];break;case 500:s=["backendError"];break;default:displayError(a)}e(s,r)},module.exports.signIn=async function(t,e,a){const s={username:t,password:e,grant_type:"password"};let r;try{r=await sendRequest("POST","/tokens",s,"application/x-www-form-urlencoded")}catch(c){return void a(c)}let n,c=[],o={id:-1,username:""};switch(r.status){case 200:n=await r.json(),accessToken=n.access_token;const t=jwtDecode(n.id_token);o.id=t.sub,o.username=t.preferred_username;break;case 400:n=await r.json(),"invalid_grant"===n.error?c=["wrongCredentials"]:(c=["unknownErrorGettingToken: "+n.error],alert(`\n\t\t\t\t\t\tSDK has not been programmed to handle error ${n.error}\n\t\t\t\t\t\twhen failing to login.\n\t\t\t\t\t`));break;default:displayError(r)}a(c,o)},module.exports.signOut=async function(t){accessToken=null,t()},module.exports.getAllActivities=async function(t){let e;try{e=await sendRequest("GET","/activities")}catch(a){return void t(a)}let a=[],s=[];switch(e.status){case 200:s=await e.json();break;case 500:a=["backendError"];break;default:displayError(e)}t(a,s)},module.exports.getActivitiesByAccountId=async function(t,e){let a;try{a=await sendRequest("GET","/activities?accountId="+t)}catch(s){return void e(s)}let s=[],r=[];switch(a.status){case 200:r=await a.json();break;case 500:s=["backendError"];break;default:displayError(a)}e(s,r)},module.exports.getActivityById=async function(t,e){let a;try{a=await sendRequest("GET","/activities/"+t)}catch(s){return void e(s)}let s=[],r=null;switch(a.status){case 200:r=await a.json();break;case 404:s=["notFound"];break;case 500:s=["backendError"];break;default:displayError(a)}e(s,r)},module.exports.createActivity=async function(t,e){let a;try{a=await sendRequest("POST","/activities",t)}catch(s){return void e(s)}let s=[],r=-1;switch(a.status){case 201:const t=a.headers.get("Location");r=parseInt(t.substr("/activities/".length));break;case 400:case 401:s=await a.json();break;case 422:s=["invalidActivity"];break;case 500:s=["backendError"];break;default:displayError(a)}e(s,r)},module.exports.updateActivityById=async function(t,e,a){let s;try{s=await sendRequest("PUT","/activities/"+t,e)}catch(r){return void a(r)}let r=[];switch(s.status){case 204:break;case 400:case 401:r=await s.json();break;case 404:r=["notFound"];break;case 422:r=["invalidActivity"];break;case 500:r=["backendError"];break;default:displayError(s)}a(r)},module.exports.deleteActivityById=async function(t,e){let a;try{a=await sendRequest("DELETE","/activities/"+t)}catch(s){return void e(s)}let s=[];switch(a.status){case 204:break;case 401:s=await a.json();break;case 404:s=["notFound"];break;case 500:s=["backendError"];break;default:displayError(a)}e(s)};