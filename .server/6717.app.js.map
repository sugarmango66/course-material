{"version":3,"file":"6717.app.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;;;;;;;AEA0E;AAC1E;;AAEA,CAA0H;AAC1H,iCAAiC,+BAAe,uBAAuB,SAAS;;AAEhF,iDAAe;;;;;;;;ACNF;AACb,6BAA6C,EAAE,aAAa,CAAC;AAC7D;AACA;AACA,SAAe;AACf;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACVO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://course-material/./src/.vuepress/.temp/pages/lectures/android-sqlite-database/index.html.vue","webpack://course-material/./src/.vuepress/.temp/pages/lectures/android-sqlite-database/index.html.vue?cbb4","webpack://course-material/./src/.vuepress/.temp/pages/lectures/android-sqlite-database/index.html.vue?557b","webpack://course-material/./node_modules/vue-loader/dist/exportHelper.js","webpack://course-material/./src/.vuepress/.temp/pages/lectures/android-sqlite-database/index.html.js"],"sourcesContent":["<h1 id=\"android-sqlite-database\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#android-sqlite-database\" aria-hidden=\"true\">#</a> Android SQLite Database</h1>\n<p>So, your application collects data from the user that you need to store somewhere? Why not in an SQlite database? Android has built-in support for that one, so why not?</p>\n<div class=\"custom-container warning\"><p class=\"custom-container-title\">Room</p>\n<p>The lecture shows the old way we communicated with SQLite databases in Android. A few years back Google released <a href=\"https://developer.android.com/jetpack/androidx/releases/room\" target=\"_blank\" rel=\"noopener noreferrer\">the Room library<OutboundLink/></a> (an Object Relational Mapping library) we can use to more easily communicate with the database. However, it's still good to have knowledge about the old way, since many old applications use it.</p>\n</div>\n<iframe width=\"560\" height=\"314\" src=\"https://www.youtube.com/embed/tI-0IZOhvFk\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<h2 id=\"lecture-material\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#lecture-material\" aria-hidden=\"true\">#</a> Lecture material</h2>\n<ul>\n<li><a href=\"android-sqlite-database.pdf\">android-sqlite-database.pdf</a></li>\n<li><a href=\"android-sqlite-database.pptx\">android-sqlite-database.pptx</a></li>\n</ul>\n<h2 id=\"recommended-reading\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#recommended-reading\" aria-hidden=\"true\">#</a> Recommended reading</h2>\n<ul>\n<li>The Android Developers Guide <a href=\"https://developer.android.com/training/data-storage\" target=\"_blank\" rel=\"noopener noreferrer\">App data &amp; files<OutboundLink/></a>.</li>\n<li>The Android Developers Guide <a href=\"https://developer.android.com/training/data-storage/room\" target=\"_blank\" rel=\"noopener noreferrer\">Save data in a local database using Room<OutboundLink/></a>.</li>\n<li>The course book <a href=\"https://commonsware.com/Room/\" target=\"_blank\" rel=\"noopener noreferrer\">Elements of Android Room<OutboundLink/></a>.</li>\n</ul>\n","export * from \"-!../../../../../../node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!../../../../../../node_modules/@vuepress/bundler-webpack/lib/build/ssr/vuepressLoader.js!../../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./index.html.vue?vue&type=template&id=7dd6717e\"","import { ssrRender } from \"./index.html.vue?vue&type=template&id=7dd6717e\"\nconst script = {}\n\nimport exportComponent from \"C:\\\\Users\\\\peter\\\\projects\\\\course-material\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['ssrRender',ssrRender]])\n\nexport default __exports__","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","export const data = {\n  \"key\": \"v-d894191c\",\n  \"path\": \"/lectures/android-sqlite-database/\",\n  \"title\": \"Android SQLite Database\",\n  \"lang\": \"en-US\",\n  \"frontmatter\": {\n    \"sidebar\": \"auto\",\n    \"navbarTitle\": \"Android SQLite Database\"\n  },\n  \"excerpt\": \"\",\n  \"headers\": [\n    {\n      \"level\": 2,\n      \"title\": \"Lecture material\",\n      \"slug\": \"lecture-material\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"Recommended reading\",\n      \"slug\": \"recommended-reading\",\n      \"children\": []\n    }\n  ],\n  \"filePathRelative\": \"lectures/android-sqlite-database/README.md\",\n  \"git\": {\n    \"updatedTime\": 1645429704000\n  }\n}\n"],"names":[],"sourceRoot":""}